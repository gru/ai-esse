Последнее время довольно много хзайпа вокруг ИИ, и я особо не придавал ему внимания лддо тех пор пока мне не попалось видео Дмитрия нестерука о том как он использует ИИ в своей каждодневной рутине.
И не смотря на то что в видео он просто рассказывает про некоторые паттерны ускорения работы при помощи ИИ, без каких либо практических примеров, меня заинтересовал вывод который он делает в конце, называя ИИ автодополнением на стероидах.
По ловам дмитрия использование ИИ может увеличить производительность отдельных разработчиков в разы.

Кроме того от знакомых я слышал что сейчас существуют модели с большим контекстом в который может целиком поместится код небольшого микросервиса. 
А это означает более релевантные результаты при генерации кода, вплоть до того что ИИ по запросу "добавь новое поле в ответ такого-то контроллера" создаст поле в dto, добавит его в запрос к БД и сам создаст миграцию которая добавит это поле в релевантную таблицу.
Про написание более релевантных тестов и документации я уже и не говорю ИИ применялся для этого и раньше. Звучало это все довольно интригующе и я решил, что раз уж я планирую исследовать несколько инструментов, то начну ка я с шаблона миросервиса.
Это не только позволит мне не тратить время на добавление одного и того же кода в каждый новый проект, но и задас для ИИ шаблон исходя из которого она должна будет использовать code style как в шаблоне, пакеты из шаблона и так далее, не придуммывая все с нуля.
Естественно что такой щаблон тоже должен быть разработан при помощи ИИ.

В качестве ИИ для своего первого проекта я выбрал claude потому что там есть так называемые проекты и у этих проектов достаточно большой контекст. Итак для начала я создал файл решения и добавл новый проект который назвал AI.Template, я особо не помнил как делать 
проекты шаблонов для команды `dotnet new`, поэтому написал простой промт для ИИ чтобы он сгенерировал мне код.

